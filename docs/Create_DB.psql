

//Definindo Enum das tabelas
CREATE TYPE user_status AS ENUM('enable','disabled');
CREATE TYPE category_type AS ENUM('revenue','expense');
CREATE TYPE transaction_status AS ENUM('peding','paid','canceled');
CREATE TYPE installment_status AS ENUM('peding','paid','overdue');

//Criando tabela de Usuários
CREATE TABLE users(
	user_id SERIAL PRIMARY KEY,
	name VARCHAR(100) NOT NULL,
	email VARCHAR(100) NOT NULL,
	password_hash VARCHAR(42) NOT NULL,
	status user_status NOT NULL,
	created_at TIMESTAMPTZ DEFAULT NOW(),
	update_at TIMESTAMPTZ DEFAULT NOW()
);
//Criando tabela de categorias
CREATE TABLE categories(
	category_id SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(user_id),
	name VARCHAR(30) NOT NULL,
	type category_type NOT NULL,
	color VARCHAR(20) NOT NULL,
	icon VARCHAR(20) NOT NULL,
	created_at TIMESTAMPTZ DEFAULT NOW(),
	update_at TIMESTAMPTZ DEFAULT NOW()
);


//Criando tabela de metodos de pagamento
CREATE TABLE payment_methods(
	payment_method_id SERIAL PRIMARY KEY,
	name VARCHAR(30) NOT NULL
);

//Criando tabela de Transações
CREATE TABLE transactions(
	transaction_id SERIAL PRIMARY KEY,
	user_id INT REFERENCES users(user_id),
	category_id INT REFERENCES categories(category_id),
	payment_method_id INT REFERENCES payment_methods(payment_method_id),
	due_date TIMESTAMPTZ NOT NULL,
	amount NUMERIC(10,2) NOT NULL,
	description TEXT NOT NULL,
	status transaction_status NOT NULL,
	created_at TIMESTAMPTZ DEFAULT NOW(),
	update_at TIMESTAMPTZ DEFAULT NOW()
);

//Criando tabela de parcelas
CREATE TABLE installments(
	installment_id SERIAL PRIMARY KEY,
	transaction_id INT REFERENCES transactions(transaction_id),
	current_installment NUMERIC(10,2) NOT NULL,
	paid_date TIMESTAMPTZ,
	installment_value NUMERIC(10,2),
	status installment_status NOT NULL,
	created_at TIMESTAMPTZ DEFAULT NOW(),
	update_at TIMESTAMPTZ DEFAULT NOW()
);

=========================
======SELECT IN TABLES =======
=========================
select * from payment_methods

select * from categories

SELECT TO_CHAR(t.due_date, 'DD/MM/YYYY') AS due_date,
t.transaction_id  AS transaction_id ,
c.name AS name,
t.description AS description,
t.amount as amount,
c.color  as color,
c.icon as icon,
t.status as status,
p.name as pmethod
from transactions AS t
INNER JOIN categories
AS c ON t.category_id = c.category_id
INNER JOIN payment_methods AS p ON t.payment_method_id = p.payment_method_id



SELECT SUM(amount) AS total_mes
FROM transactions
WHERE EXTRACT(MONTH FROM due_date) = 15
  AND EXTRACT(YEAR FROM due_date) = 2025;

=========================
======DROP IN TABLES =======
=========================
DROP TABLE transactions;
DROP TABLE installments;




=========================
======INSERT IN TABLES =======
=========================
INSERT INTO payment_methods(name);
VALUES ('Cartão de Crédito'),
		('Cartão de Débito'),
		('Dinheiro'),
		('VR');

		
INSERT INTO categories(name, type, color, icon)
VALUES ('Feira do Mês','expense', '#725ac8','shopping_cart' )



=========================
======DELETE IN TABLES =======
=========================
DELETE FROM categories
WHERE user_id IS NULL






=========================
========DROP IN DB =========
=========================

DROP DATABASE DB_GCash;